{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","varaint","start","end","value","duration","separator","Date","toDateString","variant","url","fetchData","a","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","Chart","useState","setDailydata","useEffect","fetchAPI","console","log","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","CountryPicker","App","state","fetchedData","this","setState","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.baab863f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"deaths\":\"Cards_deaths__Qdjzq\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\n\nimport styles from './Cards.module.css';\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n\n\tif (!confirmed) {\n\t\treturn 'Loading...';\n\t}\n\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<Grid container spacing={3} justify=\"center\">\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n\t\t\t\t\t\t<Typography varaint=\"h5\">\n\t\t\t\t\t\t\t<CountUp start={0} end={confirmed.value} duration={1.5} separator=\",\" />\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\">No of active cases of Covid-19</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n\t\t\t\t\t\t<Typography varaint=\"h5\">\n\t\t\t\t\t\t\t<CountUp start={0} end={recovered.value} duration={1.5} separator=\",\" />\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\">No of recovered cases of Covid-19</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n\t\t\t\t\t\t<Typography varaint=\"h5\">\n\t\t\t\t\t\t\t<CountUp start={0} end={deaths.value} duration={1.5} separator=\",\" />\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\">No of Deaths cases of Covid-19</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</div>\n\n\t)\n}\n\nexport default Cards;   \n","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async () => {\n  try {\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(url);\n    return { confirmed, recovered, deaths, lastUpdate, };\n\n  } catch (error) {\n\n  }\n}\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n    const modifiedData = data.map((dailyData) =>({\n      confirmed : dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate,\n    }));\n\n    return modifiedData;\n  } catch (error) {\n\n  }\n}","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2'\n\nimport styles from './Chart.module.css';\n\nconst Chart = () => {\n  const [dailyData, setDailydata] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailydata(await fetchDailyData());\n    }\n    console.log(dailyData);\n    fetchAPI();\n  });\n\n  const lineChart = (\n    dailyData.length\n      ? (\n        <Line\n          data={{\n            labels: dailyData.map(({ date })=> date),\n            datasets: [{\n              data: dailyData.map(({ confirmed}) => confirmed),\n              label: 'Infected',\n              borderColor: 'red',\n              fill: true,\n            }, {\n              data: dailyData.map(({ deaths}) => deaths),\n              label: 'Deaths',\n              borderColor: 'grey',\n              backgroundColor: 'rgba(255,0,0,0.2)',\n              fill: true,\n            }],\n          }}\n        />) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      {lineChart}\n    </div>\n  )\n}\n\nexport default Chart;\n","import React from 'react';\n\nconst CountryPicker = () => {\n  return (\n    <h1>CountryPicker</h1>\n  )\n}\n\nexport default CountryPicker;\n","import React from 'react';\n\n\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\n\n\nclass App extends React.Component {\n  state = {\n    data: {},\n  }\n\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData });\n  }\n\n\n  render() {\n    const { data } = this.state;\n    return (\n      <div className={styles.container} >\n        <Cards data={data} />\n        <Chart />\n        <CountryPicker />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};"],"sourceRoot":""}